{
  "description": "Cluster is the Schema for the clusters API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ClusterSpec defines the desired state of Cluster",
      "properties": {
        "additionalConfiguration": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "For configuration parameters not exposed, a map can be provided for string values.\nSuch values are passed transparently to Redpanda. The key format is \"<subsystem>.field\", e.g.,\n\n\nadditionalConfiguration:\n  redpanda.enable_idempotence: \"true\"\n  redpanda.default_topic_partitions: \"3\"\n  pandaproxy_client.produce_batch_size_bytes: \"2097152\"\n\n\nNotes:\n1. versioning is not supported for map keys\n2. key names not supported by Redpanda will lead to failure on start up\n3. updating this map requires a manual restart of the Redpanda pods. Please be aware of\nsync period when one Redpanda POD is restarted\n4. cannot have keys that conflict with existing struct fields - it leads to panic\n\n\nBy default if Replicas is 3 or more and redpanda.default_topic_partitions is not set\ndefault webhook is setting redpanda.default_topic_partitions to 3.",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If specified, Redpanda Pod annotations",
          "type": "object"
        },
        "cloudStorage": {
          "description": "Cloud storage configuration for cluster",
          "properties": {
            "accessKey": {
              "description": "Cloud storage access key",
              "type": "string"
            },
            "apiEndpoint": {
              "description": "API endpoint for data storage",
              "type": "string"
            },
            "apiEndpointPort": {
              "description": "Used to override TLS port (443)",
              "type": "integer"
            },
            "bucket": {
              "description": "Cloud storage bucket",
              "type": "string"
            },
            "cacheStorage": {
              "description": "Cache directory that will be mounted for Redpanda",
              "properties": {
                "capacity": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Storage capacity requested",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                },
                "storageClassName": {
                  "description": "Storage class name - https://kubernetes.io/docs/concepts/storage/storage-classes/",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "credentialsSource": {
              "description": "Determines how to load credentials for archival storage. Supported values\nare config_file (default), aws_instance_metadata, sts, gcp_instance_metadata\n(see the cloud_storage_credentials_source property at\nhttps://docs.redpanda.com/docs/reference/cluster-properties/).\nWhen using config_file then accessKey and secretKeyRef are mandatory.",
              "type": "string"
            },
            "disableTLS": {
              "description": "Disable TLS (can be used in tests)",
              "type": "boolean"
            },
            "enabled": {
              "description": "Enables data archiving feature",
              "type": "boolean"
            },
            "maxConnections": {
              "description": "Number of simultaneous uploads per shard (default - 20)",
              "type": "integer"
            },
            "reconciliationIntervalMs": {
              "description": "Reconciliation period (default - 10s)",
              "type": "integer"
            },
            "region": {
              "description": "Cloud storage region",
              "type": "string"
            },
            "secretKeyRef": {
              "description": "Reference to (Kubernetes) Secret containing the cloud storage secret key.\nSecretKeyRef must contain the name and namespace of the Secret.\nThe Secret must contain a data entry of the form:\ndata[<SecretKeyRef.Name>] = <secret key>",
              "properties": {
                "apiVersion": {
                  "description": "API version of the referent.",
                  "type": "string"
                },
                "fieldPath": {
                  "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                  "type": "string"
                },
                "uid": {
                  "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                  "type": "string"
                }
              },
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "trustfile": {
              "description": "Path to certificate that should be used to validate server certificate",
              "type": "string"
            }
          },
          "required": [
            "enabled"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "configuration": {
          "description": "Configuration represent redpanda specific configuration",
          "properties": {
            "additionalCommandlineArguments": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Additional command line arguments that we pass to the redpanda binary\nThese are applied last and will override any other command line arguments that may be defined,\nincluding the ones added when setting `DeveloperMode` to `true`.",
              "type": "object"
            },
            "adminApi": {
              "items": {
                "description": "AdminAPI configures listener for the Redpanda Admin API",
                "properties": {
                  "external": {
                    "description": "External enables user to expose Redpanda\nadmin API outside of a Kubernetes cluster. For more\ninformation please go to ExternalConnectivityConfig",
                    "properties": {
                      "bootstrapLoadBalancer": {
                        "description": "Configures a load balancer for bootstrapping",
                        "properties": {
                          "annotations": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "If specified, sets the load balancer service annotations.\nExample usage includes configuring the load balancer to\nbe an internal one through provider-specific annotations.",
                            "type": "object"
                          },
                          "port": {
                            "description": "The port used to communicate to the load balancer.",
                            "type": "integer"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "enabled": {
                        "description": "Enabled enables the external connectivity feature",
                        "type": "boolean"
                      },
                      "endpointTemplate": {
                        "description": "EndpointTemplate is a Golang template string that allows customizing each\nbroker advertised address.\nRedpanda uses the format BROKER_ID.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT by\ndefault for advertised addresses. When an EndpointTemplate is\nprovided, then the BROKER_ID part is replaced with the endpoint\ncomputed from the template.\nThe following variables are available to the template:\n- Index: the Redpanda broker progressive number\n- HostIP: the ip address of the Node, as reported in pod status\n\n\nCommon template functions from Sprig (http://masterminds.github.io/sprig/)\nare also available. The set of available functions is limited to hermetic\nfunctions because template application needs to be deterministic.",
                        "type": "string"
                      },
                      "preferredAddressType": {
                        "description": "The preferred address type to be assigned to the external\nadvertised addresses. The valid types are ExternalDNS,\nExternalIP, InternalDNS, InternalIP, and Hostname.\nWhen the address of the preferred type is not found the advertised\naddresses remains empty. The default preferred address type is\nExternalIP. This option only applies when Subdomain is empty.",
                        "type": "string"
                      },
                      "subdomain": {
                        "description": "Subdomain can be used to change the behavior of an advertised\nKafkaAPI. Each broker advertises Kafka API as follows\nENDPOINT.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT.\nIf Subdomain is empty then each broker advertises Kafka\nAPI as PUBLIC_NODE_IP:EXTERNAL_KAFKA_API_PORT.\nIf TLS is enabled then this subdomain will be requested\nas a subject alternative name.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "port": {
                    "type": "integer"
                  },
                  "tls": {
                    "description": "Configuration of TLS for Admin API",
                    "properties": {
                      "clientCACertRef": {
                        "description": "If ClientCACertRef points to a secret containing the trusted CA certificates.\nIf provided and RequireClientAuth is true, the operator uses the certificate\nin this secret instead of issuing client certificates. The secret is expected to provide\nthe following keys: 'ca.crt'.",
                        "properties": {
                          "apiGroup": {
                            "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind is the type of resource being referenced",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the name of resource being referenced",
                            "type": "string"
                          }
                        },
                        "required": [
                          "kind",
                          "name"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "issuerRef": {
                        "description": "References cert-manager Issuer or ClusterIssuer. When provided, this\nissuer will be used to issue node certificates.\nTypically you want to provide the issuer when a generated self-signed one\nis not enough and you need to have a verifiable chain with a proper CA\ncertificate.",
                        "properties": {
                          "group": {
                            "description": "Group of the resource being referred to.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the resource being referred to.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the resource being referred to.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "nodeSecretRef": {
                        "description": "If provided, operator uses certificate in this secret instead of\nissuing its own node certificate. The secret is expected to provide\nthe following keys: 'ca.crt', 'tls.key' and 'tls.crt'\nIf NodeSecretRef points to secret in different namespace, operator will\nduplicate the secret to the same namespace as redpanda CRD to be able to\nmount it to the nodes.",
                        "properties": {
                          "apiVersion": {
                            "description": "API version of the referent.",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": "string"
                          },
                          "resourceVersion": {
                            "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                            "type": "string"
                          },
                          "uid": {
                            "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "requireClientAuth": {
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "autoCreateTopics": {
              "description": "Enable auto-creation of topics. Reference https://kafka.apache.org/documentation/#brokerconfigs_auto.create.topics.enable",
              "type": "boolean"
            },
            "developerMode": {
              "type": "boolean"
            },
            "groupTopicPartitions": {
              "description": "Number of partitions in the internal group membership topic",
              "type": "integer"
            },
            "kafkaApi": {
              "items": {
                "description": "KafkaAPI configures listener for the Kafka API",
                "properties": {
                  "authenticationMethod": {
                    "description": "AuthenticationMethod can enable authentication method per Kafka\nlistener. Available options are: none, sasl, mtls_identity.\nhttps://docs.redpanda.com/docs/security/authentication/",
                    "type": "string"
                  },
                  "external": {
                    "description": "External enables user to expose Redpanda\nnodes outside of a Kubernetes cluster. For more\ninformation please go to ExternalConnectivityConfig",
                    "properties": {
                      "bootstrapLoadBalancer": {
                        "description": "Configures a load balancer for bootstrapping",
                        "properties": {
                          "annotations": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "If specified, sets the load balancer service annotations.\nExample usage includes configuring the load balancer to\nbe an internal one through provider-specific annotations.",
                            "type": "object"
                          },
                          "port": {
                            "description": "The port used to communicate to the load balancer.",
                            "type": "integer"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "enabled": {
                        "description": "Enabled enables the external connectivity feature",
                        "type": "boolean"
                      },
                      "endpointTemplate": {
                        "description": "EndpointTemplate is a Golang template string that allows customizing each\nbroker advertised address.\nRedpanda uses the format BROKER_ID.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT by\ndefault for advertised addresses. When an EndpointTemplate is\nprovided, then the BROKER_ID part is replaced with the endpoint\ncomputed from the template.\nThe following variables are available to the template:\n- Index: the Redpanda broker progressive number\n- HostIP: the ip address of the Node, as reported in pod status\n\n\nCommon template functions from Sprig (http://masterminds.github.io/sprig/)\nare also available. The set of available functions is limited to hermetic\nfunctions because template application needs to be deterministic.",
                        "type": "string"
                      },
                      "preferredAddressType": {
                        "description": "The preferred address type to be assigned to the external\nadvertised addresses. The valid types are ExternalDNS,\nExternalIP, InternalDNS, InternalIP, and Hostname.\nWhen the address of the preferred type is not found the advertised\naddresses remains empty. The default preferred address type is\nExternalIP. This option only applies when Subdomain is empty.",
                        "type": "string"
                      },
                      "subdomain": {
                        "description": "Subdomain can be used to change the behavior of an advertised\nKafkaAPI. Each broker advertises Kafka API as follows\nENDPOINT.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT.\nIf Subdomain is empty then each broker advertises Kafka\nAPI as PUBLIC_NODE_IP:EXTERNAL_KAFKA_API_PORT.\nIf TLS is enabled then this subdomain will be requested\nas a subject alternative name.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "port": {
                    "type": "integer"
                  },
                  "tls": {
                    "description": "Configuration of TLS for Kafka API",
                    "properties": {
                      "clientCACertRef": {
                        "description": "If ClientCACertRef points to a secret containing the trusted CA certificates.\nIf provided and RequireClientAuth is true, the operator uses the certificate\nin this secret instead of issuing client certificates. The secret is expected to provide\nthe following keys: 'ca.crt'.",
                        "properties": {
                          "apiGroup": {
                            "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind is the type of resource being referenced",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the name of resource being referenced",
                            "type": "string"
                          }
                        },
                        "required": [
                          "kind",
                          "name"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "issuerRef": {
                        "description": "References cert-manager Issuer or ClusterIssuer. When provided, this\nissuer will be used to issue node certificates.\nTypically you want to provide the issuer when a generated self-signed one\nis not enough and you need to have a verifiable chain with a proper CA\ncertificate.",
                        "properties": {
                          "group": {
                            "description": "Group of the resource being referred to.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the resource being referred to.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the resource being referred to.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "nodeSecretRef": {
                        "description": "If provided, operator uses certificate in this secret instead of\nissuing its own node certificate. The secret is expected to provide\nthe following keys: 'ca.crt', 'tls.key' and 'tls.crt'\nIf NodeSecretRef points to secret in different namespace, operator will\nduplicate the secret to the same namespace as redpanda CRD to be able to\nmount it to the nodes",
                        "properties": {
                          "apiVersion": {
                            "description": "API version of the referent.",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": "string"
                          },
                          "resourceVersion": {
                            "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                            "type": "string"
                          },
                          "uid": {
                            "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "requireClientAuth": {
                        "description": "Enables two-way verification on the server side. If enabled, all Kafka\nAPI clients are required to have a valid client certificate.",
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "pandaproxyApi": {
              "items": {
                "description": "PandaproxyAPI configures listener for the Pandaproxy API",
                "properties": {
                  "authenticationMethod": {
                    "description": "AuthenticationMethod can enable authentication method per pandaproxy\nlistener. Available options are: none, http_basic.",
                    "type": "string"
                  },
                  "external": {
                    "description": "External enables user to expose Redpanda\nnodes outside of a Kubernetes cluster. For more\ninformation please go to ExternalConnectivityConfig",
                    "properties": {
                      "bootstrapLoadBalancer": {
                        "description": "Configures a load balancer for bootstrapping",
                        "properties": {
                          "annotations": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "If specified, sets the load balancer service annotations.\nExample usage includes configuring the load balancer to\nbe an internal one through provider-specific annotations.",
                            "type": "object"
                          },
                          "port": {
                            "description": "The port used to communicate to the load balancer.",
                            "type": "integer"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "enabled": {
                        "description": "Enabled enables the external connectivity feature",
                        "type": "boolean"
                      },
                      "endpointTemplate": {
                        "description": "EndpointTemplate is a Golang template string that allows customizing each\nbroker advertised address.\nRedpanda uses the format BROKER_ID.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT by\ndefault for advertised addresses. When an EndpointTemplate is\nprovided, then the BROKER_ID part is replaced with the endpoint\ncomputed from the template.\nThe following variables are available to the template:\n- Index: the Redpanda broker progressive number\n- HostIP: the ip address of the Node, as reported in pod status\n\n\nCommon template functions from Sprig (http://masterminds.github.io/sprig/)\nare also available. The set of available functions is limited to hermetic\nfunctions because template application needs to be deterministic.",
                        "type": "string"
                      },
                      "ingress": {
                        "description": "Configures a ingress resource",
                        "properties": {
                          "annotations": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Optional annotations for the generated ingress.",
                            "type": "object"
                          },
                          "enabled": {
                            "description": "Indicates if ingress is enabled (true when unspecified).",
                            "type": "boolean"
                          },
                          "endpoint": {
                            "description": "If present, it's appended to the subdomain to form the ingress hostname.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "preferredAddressType": {
                        "description": "The preferred address type to be assigned to the external\nadvertised addresses. The valid types are ExternalDNS,\nExternalIP, InternalDNS, InternalIP, and Hostname.\nWhen the address of the preferred type is not found the advertised\naddresses remains empty. The default preferred address type is\nExternalIP. This option only applies when Subdomain is empty.",
                        "type": "string"
                      },
                      "subdomain": {
                        "description": "Subdomain can be used to change the behavior of an advertised\nKafkaAPI. Each broker advertises Kafka API as follows\nENDPOINT.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT.\nIf Subdomain is empty then each broker advertises Kafka\nAPI as PUBLIC_NODE_IP:EXTERNAL_KAFKA_API_PORT.\nIf TLS is enabled then this subdomain will be requested\nas a subject alternative name.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "port": {
                    "type": "integer"
                  },
                  "tls": {
                    "description": "Configuration of TLS for Pandaproxy API",
                    "properties": {
                      "clientCACertRef": {
                        "description": "If ClientCACertRef points to a secret containing the trusted CA certificates.\nIf provided and RequireClientAuth is true, the operator uses the certificate\nin this secret instead of issuing client certificates. The secret is expected to provide\nthe following keys: 'ca.crt'.",
                        "properties": {
                          "apiGroup": {
                            "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind is the type of resource being referenced",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the name of resource being referenced",
                            "type": "string"
                          }
                        },
                        "required": [
                          "kind",
                          "name"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "issuerRef": {
                        "description": "References cert-manager Issuer or ClusterIssuer. When provided, this\nissuer will be used to issue node certificates.\nTypically you want to provide the issuer when a generated self-signed one\nis not enough and you need to have a verifiable chain with a proper CA\ncertificate.",
                        "properties": {
                          "group": {
                            "description": "Group of the resource being referred to.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the resource being referred to.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the resource being referred to.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "nodeSecretRef": {
                        "description": "If provided, operator uses certificate in this secret instead of\nissuing its own node certificate. The secret is expected to provide\nthe following keys: 'ca.crt', 'tls.key' and 'tls.crt'\nIf NodeSecretRef points to secret in different namespace, operator will\nduplicate the secret to the same namespace as redpanda CRD to be able to\nmount it to the nodes",
                        "properties": {
                          "apiVersion": {
                            "description": "API version of the referent.",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": "string"
                          },
                          "resourceVersion": {
                            "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                            "type": "string"
                          },
                          "uid": {
                            "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "requireClientAuth": {
                        "description": "Enables two-way verification on the server side. If enabled, all\nPandaproxy API clients are required to have a valid client certificate.",
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "rpcServer": {
              "description": "SocketAddress provide the way to configure the port",
              "properties": {
                "port": {
                  "type": "integer"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "schemaRegistry": {
              "description": "SchemaRegistryAPI configures the schema registry API",
              "properties": {
                "authenticationMethod": {
                  "description": "AuthenticationMethod can enable authentication method per schema registry\nlistener. Available options are: none, http_basic.",
                  "type": "string"
                },
                "external": {
                  "description": "External enables user to expose Redpanda\nnodes outside of a Kubernetes cluster. For more\ninformation please go to ExternalConnectivityConfig",
                  "properties": {
                    "bootstrapLoadBalancer": {
                      "description": "Configures a load balancer for bootstrapping",
                      "properties": {
                        "annotations": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "If specified, sets the load balancer service annotations.\nExample usage includes configuring the load balancer to\nbe an internal one through provider-specific annotations.",
                          "type": "object"
                        },
                        "port": {
                          "description": "The port used to communicate to the load balancer.",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "enabled": {
                      "description": "Enabled enables the external connectivity feature",
                      "type": "boolean"
                    },
                    "endpoint": {
                      "description": "Indicates the global endpoint that (together with subdomain), should be\nadvertised for schema registry.",
                      "type": "string"
                    },
                    "endpointTemplate": {
                      "description": "EndpointTemplate is a Golang template string that allows customizing each\nbroker advertised address.\nRedpanda uses the format BROKER_ID.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT by\ndefault for advertised addresses. When an EndpointTemplate is\nprovided, then the BROKER_ID part is replaced with the endpoint\ncomputed from the template.\nThe following variables are available to the template:\n- Index: the Redpanda broker progressive number\n- HostIP: the ip address of the Node, as reported in pod status\n\n\nCommon template functions from Sprig (http://masterminds.github.io/sprig/)\nare also available. The set of available functions is limited to hermetic\nfunctions because template application needs to be deterministic.",
                      "type": "string"
                    },
                    "preferredAddressType": {
                      "description": "The preferred address type to be assigned to the external\nadvertised addresses. The valid types are ExternalDNS,\nExternalIP, InternalDNS, InternalIP, and Hostname.\nWhen the address of the preferred type is not found the advertised\naddresses remains empty. The default preferred address type is\nExternalIP. This option only applies when Subdomain is empty.",
                      "type": "string"
                    },
                    "staticNodePort": {
                      "description": "Indicates that the node port for the service needs not to be generated.",
                      "type": "boolean"
                    },
                    "subdomain": {
                      "description": "Subdomain can be used to change the behavior of an advertised\nKafkaAPI. Each broker advertises Kafka API as follows\nENDPOINT.SUBDOMAIN:EXTERNAL_KAFKA_API_PORT.\nIf Subdomain is empty then each broker advertises Kafka\nAPI as PUBLIC_NODE_IP:EXTERNAL_KAFKA_API_PORT.\nIf TLS is enabled then this subdomain will be requested\nas a subject alternative name.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "port": {
                  "description": "Port will set the schema registry listener port in Redpanda\nconfiguration.\nIf not set the default will be 8081",
                  "type": "integer"
                },
                "tls": {
                  "description": "TLS is the configuration for schema registry",
                  "properties": {
                    "clientCACertRef": {
                      "description": "If ClientCACertRef points to a secret containing the trusted CA certificates.\nIf provided and RequireClientAuth is true, the operator uses the certificate\nin this secret instead of issuing client certificates. The secret is expected to provide\nthe following keys: 'ca.crt'.",
                      "properties": {
                        "apiGroup": {
                          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the type of resource being referenced",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the name of resource being referenced",
                          "type": "string"
                        }
                      },
                      "required": [
                        "kind",
                        "name"
                      ],
                      "type": "object",
                      "x-kubernetes-map-type": "atomic",
                      "additionalProperties": false
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "issuerRef": {
                      "description": "References cert-manager Issuer or ClusterIssuer. When provided, this\nissuer will be used to issue node certificates.\nTypically you want to provide the issuer when a generated self-signed one\nis not enough and you need to have a verifiable chain with a proper CA\ncertificate.",
                      "properties": {
                        "group": {
                          "description": "Group of the resource being referred to.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind of the resource being referred to.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the resource being referred to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "nodeSecretRef": {
                      "description": "If provided, operator uses certificate in this secret instead of\nissuing its own node certificate. The secret is expected to provide\nthe following keys: 'ca.crt', 'tls.key' and 'tls.crt'\nIf NodeSecretRef points to secret in different namespace, operator will\nduplicate the secret to the same namespace as redpanda CRD to be able to\nmount it to the nodes",
                      "properties": {
                        "apiVersion": {
                          "description": "API version of the referent.",
                          "type": "string"
                        },
                        "fieldPath": {
                          "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                          "type": "string"
                        },
                        "resourceVersion": {
                          "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                          "type": "string"
                        },
                        "uid": {
                          "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-kubernetes-map-type": "atomic",
                      "additionalProperties": false
                    },
                    "requireClientAuth": {
                      "description": "Enables two-way verification on the server side. If enabled, all SchemaRegistry\nclients are required to have a valid client certificate.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "dnsTrailingDotDisabled": {
          "description": "DNSTrailingDotDisabled gives ability to turn off the fully-qualified\nDNS name.\nhttp://www.dns-sd.org/trailingdotsindomainnames.html",
          "type": "boolean"
        },
        "enableSasl": {
          "description": "SASL enablement flag\nDeprecated: replaced by \"kafkaEnableAuthorization\"",
          "type": "boolean"
        },
        "image": {
          "description": "Image is the fully qualified name of the Redpanda container",
          "type": "string"
        },
        "initialValidationForVolume": {
          "description": "When InitialValidationForVolume is enabled the mounted Redpanda data folder\nwill be checked if:\n- it is dir\n- it has XFS file system\n- it can create test file and delete it",
          "type": "boolean"
        },
        "kafkaEnableAuthorization": {
          "description": "Enable authorization for Kafka connections. Values are:\n\n\n- `nil`: Ignored. Authorization is enabled with `enable_sasl: true`\n\n\n- `true`: authorization is required\n\n\n- `false`: authorization is disabled;\n\n\nSee also `enableSasl` and `configuration.kafkaApi[].authenticationMethod`",
          "type": "boolean"
        },
        "licenseRef": {
          "description": "If key is not provided in the SecretRef, Secret data should have key \"license\"",
          "properties": {
            "key": {
              "description": "Key in Secret data to get value from",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If specified, Redpanda Pod node selectors. For reference please visit\nhttps://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node",
          "type": "object"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget specifies whether PDB resource should be created for\nthe cluster and how should it be configured. By default this is enabled\nand defaults to MaxUnavailable=1",
          "properties": {
            "enabled": {
              "description": "Enabled specifies whether PDB should be generated for the cluster. It defaults to true",
              "type": "boolean"
            },
            "maxUnavailable": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by\n\"selector\" are unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\".\nThis property defaults to 1.\nyou can read more in https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
              "x-kubernetes-int-or-string": true
            },
            "minAvailable": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An eviction is allowed if at least \"minAvailable\" pods selected by\n\"selector\" will still be available after the eviction, i.e. even in the\nabsence of the evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\". This is a mutually exclusive setting with \"maxUnavailable\".\nyou can read more in https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
              "x-kubernetes-int-or-string": true
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "replicas": {
          "description": "Replicas determine how big the cluster will be.",
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        },
        "resources": {
          "description": "Resources used by redpanda process running in container. Beware that\nthere are multiple containers running in the redpanda pod and these can\nbe enabled/disabled and configured from the `sidecars` field. These\ncontainers have separate resources settings and the amount of resources\nassigned to these containers will be required on the cluster on top of\nthe resources defined here",
          "properties": {
            "claims": {
              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers.",
              "items": {
                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                "properties": {
                  "name": {
                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            },
            "limits": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            },
            "redpanda": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Redpanda describes the amount of compute resources passed to redpanda.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            },
            "requests": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "restartConfig": {
          "description": "RestartConfig allows to control the behavior of the cluster when restarting",
          "properties": {
            "disableMaintenanceModeHooks": {
              "description": "DisableMaintenanceModeHooks deactivates the preStop and postStart hooks that force nodes to enter maintenance mode when stopping and exit maintenance mode when up again",
              "type": "boolean"
            },
            "underReplicatedPartitionThreshold": {
              "description": "UnderReplicatedPartitionThreshold controls when rolling update will continue with\nrestarts. The procedure can be described as follows:\n\n\n1. Rolling update checks if Pod specification needs to be replaced and deletes it\n2. Deleted Redpanda Pod is put into maintenance mode (postStart hook will disable\n   maintenance mode when new Pod starts)\n3. Rolling update waits for Pod to be in Ready state\n4. Rolling update checks if cluster is in healthy state\n5. Rolling update checks if restarted Redpanda Pod admin API Ready endpoint returns HTTP 200 response\n6. Using UnderReplicatedPartitionThreshold each under replicated partition metric is compared with the threshold\n7. Rolling update moves to the next Redpanda pod\n\n\nThe metric `vectorized_cluster_partition_under_replicated_replicas` is used in the comparison\n\n\nMentioned metrics has the following help description:\n`vectorized_cluster_partition_under_replicated_replicas` Number of under replicated replicas\n\n\nBy default, the UnderReplicatedPartitionThreshold will be 0, which means all partitions needs to catch up without any lag.",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "serviceAccount": {
          "description": "The name of the ServiceAccount to be used by the Redpanda pods",
          "type": "string"
        },
        "sidecars": {
          "description": "Sidecars is list of sidecars run alongside redpanda container",
          "properties": {
            "rpkStatus": {
              "description": "RpkStatus is sidecar running rpk status collecting status information\nfrom the running node",
              "properties": {
                "enabled": {
                  "description": "Enabled if false, the sidecar won't be added to the pod running redpanda node",
                  "type": "boolean"
                },
                "resources": {
                  "description": "Resources are resource requirements and limits for the container running\nthis sidecar. For the default sidecars this is defaulted",
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers.",
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "storage": {
          "description": "Storage spec for cluster",
          "properties": {
            "capacity": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Storage capacity requested",
              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
              "x-kubernetes-int-or-string": true
            },
            "storageClassName": {
              "description": "Storage class name - https://kubernetes.io/docs/concepts/storage/storage-classes/",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "superUsers": {
          "description": "List of superusers",
          "items": {
            "description": "Superuser has full access to the Redpanda cluster",
            "properties": {
              "username": {
                "type": "string"
              }
            },
            "required": [
              "username"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "tolerations": {
          "description": "If specified, Redpanda Pod tolerations",
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": "string"
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                "type": "string"
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                "format": "int64",
                "type": "integer"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "version": {
          "description": "Version is the Redpanda container tag",
          "type": "string"
        }
      },
      "required": [
        "resources"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ClusterStatus defines the observed state of Cluster",
      "properties": {
        "conditions": {
          "description": "Current state of the cluster.",
          "items": {
            "description": "ClusterCondition contains details for the current conditions of the cluster",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition",
                "enum": [
                  "ClusterConfigured"
                ],
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "currentReplicas": {
          "description": "CurrentReplicas is the number of Pods that the controller currently wants to run for the cluster.",
          "format": "int32",
          "type": "integer"
        },
        "decommissioningNode": {
          "description": "Indicates that a node is currently being decommissioned from the cluster and provides its ordinal number",
          "format": "int32",
          "type": "integer"
        },
        "nodes": {
          "description": "Nodes of the provisioned redpanda nodes",
          "properties": {
            "external": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "externalAdmin": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "externalBootstrap": {
              "description": "LoadBalancerStatus reports the load balancer status as generated\nby the load balancer core service",
              "properties": {
                "ingress": {
                  "description": "Ingress is a list containing ingress points for the load-balancer.\nTraffic intended for the service should be sent to these ingress points.",
                  "items": {
                    "description": "LoadBalancerIngress represents the status of a load-balancer ingress point:\ntraffic intended for the service should be sent to an ingress point.",
                    "properties": {
                      "hostname": {
                        "description": "Hostname is set for load-balancer ingress points that are DNS based\n(typically AWS load-balancers)",
                        "type": "string"
                      },
                      "ip": {
                        "description": "IP is set for load-balancer ingress points that are IP based\n(typically GCE or OpenStack load-balancers)",
                        "type": "string"
                      },
                      "ipMode": {
                        "description": "IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified.\nSetting this to \"VIP\" indicates that traffic is delivered to the node with\nthe destination set to the load-balancer's IP and port.\nSetting this to \"Proxy\" indicates that traffic is delivered to the node or pod with\nthe destination set to the node's IP and node port or the pod's IP and port.\nService implementations may use this information to adjust traffic routing.",
                        "type": "string"
                      },
                      "ports": {
                        "description": "Ports is a list of records of service ports\nIf used, every port defined in the service should have an entry in it",
                        "items": {
                          "properties": {
                            "error": {
                              "description": "Error is to record the problem with the service port\nThe format of the error shall comply with the following rules:\n- built-in error values shall be specified in this file and those shall use\n  CamelCase names\n- cloud provider specific error values must have names that comply with the\n  format foo.example.com/CamelCase.\n---\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                              "maxLength": 316,
                              "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                              "type": "string"
                            },
                            "port": {
                              "description": "Port is the port number of the service port of which status is recorded here",
                              "format": "int32",
                              "type": "integer"
                            },
                            "protocol": {
                              "default": "TCP",
                              "description": "Protocol is the protocol of the service port of which status is recorded here\nThe supported values are: \"TCP\", \"UDP\", \"SCTP\"",
                              "type": "string"
                            }
                          },
                          "required": [
                            "port",
                            "protocol"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array",
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "externalPandaproxy": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "internal": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "pandaproxyIngress": {
              "type": "string"
            },
            "schemaRegistry": {
              "description": "SchemaRegistryStatus reports addresses where schema registry\ncan be reached",
              "properties": {
                "external": {
                  "description": "External address should be registered in DNS provider using\nall public IP of a nodes that Redpanda is scheduled on.\n\n\nThe External is empty when subdomain is not provided.",
                  "type": "string"
                },
                "externalNodeIPs": {
                  "description": "ExternalNodeIPs is only filled when the Schema Registry\nexternal connectivity feature flag is enabled, but the subdomain is\nempty. This gives user ability to register all addresses individually\nin DNS provider of choice.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "internal": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "readyReplicas": {
          "description": "ReadyReplicas is the number of Pods belonging to the cluster that have a Ready Condition.",
          "format": "int32",
          "type": "integer"
        },
        "replicas": {
          "description": "Replicas show how many nodes have been created for the cluster",
          "format": "int32",
          "type": "integer"
        },
        "restarting": {
          "description": "Indicates that a cluster is restarting due to an upgrade or a different reason",
          "type": "boolean"
        },
        "upgrading": {
          "description": "Indicates cluster is upgrading.\nDeprecated: replaced by \"restarting\"",
          "type": "boolean"
        },
        "version": {
          "description": "Current version of the cluster.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
