{
  "description": "HTTPTrigger is the trigger invokes user functions when receiving HTTP requests.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "HTTPTriggerSpec is for router to expose user functions at the given URL path.",
      "properties": {
        "createingress": {
          "description": "If CreateIngress is true, router will create an ingress definition.",
          "type": "boolean"
        },
        "functionref": {
          "description": "FunctionReference is a reference to the target function.",
          "properties": {
            "functionweights": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "Function Reference by weight. this map contains function name as key and its weight\nas the value. This is for canary upgrade purpose.",
              "nullable": true,
              "type": "object"
            },
            "name": {
              "description": "Name of the function.",
              "type": "string"
            },
            "type": {
              "description": "Type indicates whether this function reference is by name or selector. For now,\nthe only supported reference type is by \"name\".  Future reference types:\n  * Function by label or annotation\n  * Branch or tag of a versioned function\n  * A \"rolling upgrade\" from one version of a function to another\nAvailable value:\n- name\n- function-weights",
              "type": "string"
            }
          },
          "required": [
            "name",
            "type"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "host": {
          "description": "TODO: remove this field since we have IngressConfig already\nDeprecated: the original idea of this field is not for setting Ingress.\nSince we have IngressConfig now, remove Host after couple releases.",
          "type": "string"
        },
        "ingressconfig": {
          "description": "TODO: make IngressConfig an independent Fission resource\nIngressConfig for router to set up Ingress.",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations will be added to metadata when creating Ingress.",
              "nullable": true,
              "type": "object"
            },
            "host": {
              "description": "Host is for ingress controller to apply rules. If\nhost is empty or \"*\", the rule applies to all\ninbound HTTP traffic.",
              "type": "string"
            },
            "path": {
              "description": "Path is for path matching. The format of path\ndepends on what ingress controller you used.",
              "type": "string"
            },
            "tls": {
              "description": "TLS is for user to specify a Secret that contains\nTLS key and certificate. The domain name in the\nkey and crt must match the value of Host field.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "keepPrefix": {
          "description": "When function is exposed with Prefix based path,\nkeepPrefix decides whether to keep or trim prefix in URL while invoking function.",
          "type": "boolean"
        },
        "method": {
          "description": "Use Methods instead of Method. This field is going to be deprecated in a future release\nHTTP method to access a function.",
          "type": "string"
        },
        "methods": {
          "description": "HTTP methods to access a function",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "prefix": {
          "description": "Prefix with which functions are exposed.\nNOTE: Prefix takes precedence over URL/RelativeURL.\nNote that it does not treat slashes specially (\"/foobar/\" will be matched by\nthe prefix \"/foobar\").",
          "type": "string"
        },
        "relativeurl": {
          "description": "RelativeURL is the exposed URL for external client to access a function with.",
          "type": "string"
        }
      },
      "required": [
        "functionref"
      ],
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "metadata",
    "spec"
  ],
  "type": "object"
}
