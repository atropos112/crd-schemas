{
  "description": "AppBundle is the Schema for the appbundles API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AppBundleSpec defines the desired state of AppBundle, its the core of the AppBundle (minus metadata etc.)",
      "properties": {
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "backup": {
          "properties": {
            "frequency": {
              "type": "string"
            },
            "retain": {
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "base": {
          "type": "string"
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "configs": {
          "additionalProperties": {
            "properties": {
              "content": {
                "type": "string"
              },
              "copyOver": {
                "type": "boolean"
              },
              "dirPath": {
                "type": "string"
              },
              "existing": {
                "type": "string"
              },
              "fileName": {
                "type": "string"
              },
              "secrets": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "object"
        },
        "envs": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "homepage": {
          "properties": {
            "description": {
              "type": "string"
            },
            "groups": {
              "type": "string"
            },
            "href": {
              "type": "string"
            },
            "icon": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "section": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "image": {
          "properties": {
            "pullPolicy": {
              "description": "PullPolicy describes a policy for if/when to pull a container image",
              "type": "string"
            },
            "repository": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "livenessProbe": {
          "description": "Probe describes a health check to be performed against a container to determine whether it is\nalive or ready to receive traffic.",
          "properties": {
            "exec": {
              "description": "Exec specifies the action to take.",
              "properties": {
                "command": {
                  "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "grpc": {
              "description": "GRPC specifies an action involving a GRPC port.",
              "properties": {
                "port": {
                  "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                  "format": "int32",
                  "type": "integer"
                },
                "service": {
                  "default": "",
                  "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "httpGet": {
              "description": "HTTPGet specifies the http request to perform.",
              "properties": {
                "host": {
                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                  "type": "string"
                },
                "httpHeaders": {
                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                  "items": {
                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                    "properties": {
                      "name": {
                        "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The header field value",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "path": {
                  "description": "Path to access on the HTTP server.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                },
                "scheme": {
                  "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "tcpSocket": {
              "description": "TCPSocket specifies an action involving a TCP port.",
              "properties": {
                "host": {
                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "terminationGracePeriodSeconds": {
              "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
              "format": "int64",
              "type": "integer"
            },
            "timeoutSeconds": {
              "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "readinessProbe": {
          "description": "Probe describes a health check to be performed against a container to determine whether it is\nalive or ready to receive traffic.",
          "properties": {
            "exec": {
              "description": "Exec specifies the action to take.",
              "properties": {
                "command": {
                  "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "grpc": {
              "description": "GRPC specifies an action involving a GRPC port.",
              "properties": {
                "port": {
                  "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                  "format": "int32",
                  "type": "integer"
                },
                "service": {
                  "default": "",
                  "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "httpGet": {
              "description": "HTTPGet specifies the http request to perform.",
              "properties": {
                "host": {
                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                  "type": "string"
                },
                "httpHeaders": {
                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                  "items": {
                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                    "properties": {
                      "name": {
                        "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The header field value",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "path": {
                  "description": "Path to access on the HTTP server.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                },
                "scheme": {
                  "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "tcpSocket": {
              "description": "TCPSocket specifies an action involving a TCP port.",
              "properties": {
                "host": {
                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "terminationGracePeriodSeconds": {
              "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
              "format": "int64",
              "type": "integer"
            },
            "timeoutSeconds": {
              "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "replicas": {
          "format": "int32",
          "type": "integer"
        },
        "resources": {
          "description": "ResourceRequirements describes the compute resource requirements.",
          "properties": {
            "claims": {
              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
              "items": {
                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                "properties": {
                  "name": {
                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                    "type": "string"
                  },
                  "request": {
                    "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            },
            "limits": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            },
            "requests": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "routes": {
          "additionalProperties": {
            "properties": {
              "ingress": {
                "properties": {
                  "auth": {
                    "type": "boolean"
                  },
                  "domain": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "port": {
                "type": "integer"
              },
              "protocol": {
                "description": "Protocol defines network protocols supported for things like container ports.",
                "type": "string"
              },
              "targetPort": {
                "type": "integer"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "object"
        },
        "secretStoreRef": {
          "type": "string"
        },
        "selector": {
          "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "required": [
                  "key",
                  "operator"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array",
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object"
            }
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "serviceType": {
          "description": "Service Type string describes ingress methods for a service",
          "type": "string"
        },
        "sourcedEnvs": {
          "additionalProperties": {
            "properties": {
              "configMap": {
                "type": "string"
              },
              "externalSecret": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "secret": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "object"
        },
        "startupProbe": {
          "description": "Probe describes a health check to be performed against a container to determine whether it is\nalive or ready to receive traffic.",
          "properties": {
            "exec": {
              "description": "Exec specifies the action to take.",
              "properties": {
                "command": {
                  "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "grpc": {
              "description": "GRPC specifies an action involving a GRPC port.",
              "properties": {
                "port": {
                  "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                  "format": "int32",
                  "type": "integer"
                },
                "service": {
                  "default": "",
                  "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "httpGet": {
              "description": "HTTPGet specifies the http request to perform.",
              "properties": {
                "host": {
                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                  "type": "string"
                },
                "httpHeaders": {
                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                  "items": {
                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                    "properties": {
                      "name": {
                        "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The header field value",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "path": {
                  "description": "Path to access on the HTTP server.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                },
                "scheme": {
                  "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "tcpSocket": {
              "description": "TCPSocket specifies an action involving a TCP port.",
              "properties": {
                "host": {
                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "terminationGracePeriodSeconds": {
              "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
              "format": "int64",
              "type": "integer"
            },
            "timeoutSeconds": {
              "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tailscaleName": {
          "type": "string"
        },
        "useNvidia": {
          "type": "boolean"
        },
        "volumes": {
          "additionalProperties": {
            "properties": {
              "backup": {
                "type": "boolean"
              },
              "emptyDir": {
                "type": "boolean"
              },
              "existingClaim": {
                "type": "string"
              },
              "hostPath": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "size": {
                "type": "string"
              },
              "storageClass": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "object"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "AppBundleStatus defines the observed state of AppBundle",
      "properties": {
        "lastReconciliation": {
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
